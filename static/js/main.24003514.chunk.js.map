{"version":3,"sources":["store/canvasState.ts","store/toolState.ts","store/store.ts","store/hooks.ts","tools/Brush.ts","tools/Tool.ts","components/Canvas.tsx","components/ToolBar.tsx","App.tsx","index.tsx"],"names":["CanvasState","makeAutoObservable","this","ctx","canvas","getContext","backList","length","dataUrl","pop","forwardList","push","toDataURL","img","Image","src","onload","clearRect","width","height","drawImage","observable","action","data","ToolState","tool","coords","color","strokeColor","fillColor","lineWidth","stores","Object","freeze","canvasState","toolState","storesContext","React","createContext","StoresProvider","Provider","useStore","store","useContext","Brush","inMouseDown","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","addEventListener","touchStartHandler","touchMoveHandler","touchEndHandler","e","preventDefault","draw","touches","clientX","target","offsetLeft","clientY","offsetTop","beginPath","String","sessionStorage","getItem","pageX","pageY","x","y","lineTo","stroke","arc","Math","PI","fill","moveTo","destroyEvents","fillStyle","strokeStyle","ontouchstart","ontouchmove","ontouchend","Canvas","observer","canvasRef","useRef","setColor","useEffect","setCanvas","current","setTool","setItem","JSON","stringify","getColor","console","log","className","ref","window","innerWidth","innerHeight","onMouseDown","pushToBack","ToolBar","onClick","getTool","setToolColor","icon","faPaintBrush","faEraser","onChange","setLineWidth","value","defaultValue","min","max","type","changeColor","parse","timer","setInterval","clearInterval","crd","shift","a","faPlay","getCoords","faSave","back","faChevronLeft","forward","faChevronRight","removeItem","deleteCoords","faTrash","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24003514.chunk.js","sourcesContent":["import { action, makeAutoObservable, observable } from \"mobx\"\r\n\r\nclass CanvasState {\r\n  @observable public canvas :any = null\r\n  @observable public backList : any[] = []\r\n  @observable public forwardList : any[] = []\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  @action setCanvas = (canvas:any) => {\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  @action pushToBack =(data:string | undefined) => {\r\n    this.backList.push(data)\r\n    \r\n\r\n  }\r\n  @action pushToFor =(data:string | undefined) => {\r\n    this.forwardList.push(data)\r\n  }\r\n\r\n  @action back() {\r\n    let ctx = this.canvas.getContext('2d')\r\n    if(this.backList.length > 0){\r\n      let dataUrl = this.backList.pop()\r\n      this.forwardList.push(this.canvas.toDataURL())\r\n      let img = new Image()\r\n      img.src = dataUrl\r\n      img.onload = () => {\r\n        ctx.clearRect(0,0,this.canvas.width, this.canvas.height)\r\n        ctx.drawImage(img,0,0,this.canvas.width, this.canvas.height)\r\n      }\r\n    }\r\n    else{\r\n      ctx.clearRect(0,0,this.canvas.width, this.canvas.height)\r\n    }\r\n  }\r\n  @action forward() {\r\n    let ctx = this.canvas.getContext('2d')\r\n    if(this.forwardList.length > 0){\r\n      let dataUrl = this.forwardList.pop()\r\n      this.backList.push(this.canvas.toDataURL())\r\n      let img = new Image()\r\n      img.src = dataUrl\r\n      img.onload = () => {\r\n        ctx.clearRect(0,0,this.canvas.width, this.canvas.height)\r\n        ctx.drawImage(img,0,0,this.canvas.width, this.canvas.height)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasState;","import { action, makeAutoObservable, observable } from \"mobx\"\r\n\r\nclass ToolState {\r\n  @observable private tool : any = null\r\n  @observable private color : string = ''\r\n  constructor(){\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  @action getCoords(){\r\n    return this.tool.coords;\r\n  }\r\n  @action deleteCoords(){\r\n    this.tool.coords = []\r\n  }\r\n  @action getColor(){\r\n    return this.color;\r\n\r\n  }\r\n  @action setColor(color:string){\r\n    this.color = color;\r\n  }\r\n  @action setToolColor(color:string){\r\n    this.tool.strokeColor = color\r\n    this.tool.fillColor = color\r\n    this.color = color\r\n  }\r\n\r\n  @action getTool(){\r\n    return this.tool;\r\n  }\r\n  \r\n  @action setTool(tool:any){\r\n    this.tool = tool\r\n  }\r\n\r\n  @action setLineWidth(width:string){\r\n    this.tool.lineWidth = width\r\n  }\r\n}\r\n\r\nexport default ToolState;","import React from 'react';\r\nimport CanvasState from './canvasState'\r\nimport ToolState from './toolState'\r\n\r\nexport const stores = Object.freeze({\r\n  canvasState : new CanvasState(),\r\n  toolState: new ToolState()\r\n\r\n})\r\n\r\nexport const storesContext = React.createContext(stores);\r\nexport const StoresProvider = storesContext.Provider;","import React from \"react\";\r\nimport { stores, storesContext } from \"./store\";\r\n\r\nexport const useStores = () => React.useContext(storesContext);\r\n\r\nexport const useStore = <T extends keyof typeof stores>(\r\n  store: T\r\n): typeof stores[T] => React.useContext(storesContext)[store];","import Tool from \"./Tool\";\r\n\r\nexport default class Brush extends Tool {\r\n  inMouseDown : boolean = false;\r\n  coords :any[] = [];\r\n  color : string = '';\r\n  \r\n  constructor(canvas:any) {\r\n    super(canvas);\r\n    this.listen();\r\n  }\r\n  \r\n  listen() {\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\r\n    this.canvas.addEventListener('touchstart',  this.touchStartHandler.bind(this)); \r\n    this.canvas.addEventListener('touchmove',  this.touchMoveHandler.bind(this));\r\n    this.canvas.addEventListener('touchend',  this.touchEndHandler.bind(this));\r\n  }\r\n  //touch функции для телефона\r\n  touchMoveHandler(e:any){\r\n    e.preventDefault()\r\n    if(this.inMouseDown) {\r\n      this.draw(e.touches[0].clientX - e.target.offsetLeft , e.touches[0].clientY - e.target.offsetTop)\r\n    }\r\n  }\r\n  touchStartHandler(e: any) {\r\n    this.inMouseDown = true\r\n    this.ctx.beginPath()\r\n    this.coords.push(String(sessionStorage.getItem('color')))\r\n    this.draw(e.touches[0].clientX - e.target.offsetLeft, e.touches[0].clientY - e.target.offsetTop)\r\n  }\r\n  touchEndHandler(e:any) {\r\n    e.preventDefault()\r\n    this.inMouseDown = false;\r\n    this.ctx.beginPath();\r\n    this.coords.push('touchend')\r\n  }\r\n\r\n  //mouseEvent функции для десктопа\r\n  mouseDownHandler(e: any) {\r\n    this.inMouseDown = true\r\n    this.ctx.beginPath()\r\n    this.coords.push(String(sessionStorage.getItem('color')))\r\n    this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n    \r\n    \r\n  }\r\n  mouseMoveHandler(e:any) {\r\n    if (this.inMouseDown) {\r\n      this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n    }\r\n\r\n  }\r\n  mouseUpHandler(e:any) {\r\n    e.preventDefault()\r\n    this.inMouseDown = false;\r\n    this.ctx.beginPath();\r\n    this.coords.push('mouseup')\r\n  }\r\n  //функция рисования\r\n  draw(x:number, y:number) {\r\n    this.ctx.lineTo(x, y)\r\n    this.ctx.stroke()\r\n    this.ctx.beginPath();\r\n\r\n    this.ctx.arc(x, y, this.ctx.lineWidth / 2, 0, Math.PI * 2);\r\n    this.ctx.fill();\r\n    this.ctx.beginPath();\r\n\r\n    this.ctx.moveTo(x, y);\r\n    this.coords.push([x,y])  \r\n  }\r\n}","export default class Tool {\r\n  canvas :any\r\n  ctx: any\r\n  constructor(canvas:any){\r\n    this.canvas  = canvas;\r\n    this.ctx = canvas.getContext('2d');\r\n    this.destroyEvents()\r\n\r\n  }\r\n  set fillColor(color:any){\r\n    this.ctx.fillStyle = color\r\n  }\r\n  set strokeColor(color:any){\r\n    this.ctx.strokeStyle = color;\r\n  }\r\n  set lineWidth(width:any){\r\n    this.ctx.lineWidth = width;\r\n  }\r\n  destroyEvents() {\r\n    this.canvas.onmousemove = null\r\n    this.canvas.onmousedown = null\r\n    this.canvas.onmouseup = null\r\n    this.canvas.ontouchstart = null\r\n    this.canvas.ontouchmove = null\r\n    this.canvas.ontouchend = null\r\n    \r\n  }\r\n  \r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { useStore } from \"../store/hooks\";\r\nimport '../sass/canvas.scss'\r\nimport Brush from '../tools/Brush';\r\n\r\nconst Canvas : React.FC = observer(() => {\r\n  const canvasRef  = React.useRef<HTMLCanvasElement>(null);\r\n  const canvasState = useStore(\"canvasState\");\r\n  const toolState = useStore(\"toolState\");\r\n  toolState.setColor('#000');\r\n  \r\n  React.useEffect(():void => {\r\n    canvasState.setCanvas(canvasRef.current)\r\n    toolState.setTool(new Brush(canvasRef.current))\r\n    sessionStorage.setItem('color', JSON.stringify(toolState.getColor()))\r\n    console.log(canvasState.backList)\r\n  },[])\r\n\r\n  const mouseDownHandler = () => {\r\n    canvasState.pushToBack(canvasRef.current?.toDataURL())\r\n  }\r\n  return (\r\n    <div className=\"canvas\">\r\n      <canvas \r\n        ref={canvasRef} \r\n        width={window.innerWidth} \r\n        height={window.innerHeight-45}\r\n        onMouseDown={mouseDownHandler}\r\n      ></canvas>\r\n      \r\n    </div>\r\n  )\r\n});\r\n\r\nexport default Canvas;\r\n","import React from 'react'\r\nimport { useStore } from \"../store/hooks\";\r\nimport Brush from '../tools/Brush';\r\nimport Eraser from '../tools/Eraser'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faSave,faPaintBrush, faEraser,faTrash,faChevronLeft,faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport '../sass/toolbar.scss'\r\n\r\n\r\nconst ToolBar :React.FC  = () => {\r\n  const toolState = useStore(\"toolState\");\r\n  const canvasState = useStore(\"canvasState\");\r\n  \r\n  const changeColor = (e: React.ChangeEvent<HTMLInputElement>):void => {\r\n    toolState.setToolColor(e.target.value)\r\n    sessionStorage.setItem('color', JSON.stringify(toolState.getColor()))\r\n  }\r\n  const onSelectBrush = () => {\r\n    if(toolState.getTool() === null) {\r\n      toolState.setTool(new Brush(canvasState.canvas))\r\n    }  \r\n    toolState.setToolColor(toolState.getColor())\r\n  }\r\n\r\n  const chooseEraser = ():void => {\r\n    let canvas  = canvasState.canvas \r\n    let ctx :CanvasRenderingContext2D = canvas.getContext('2d')\r\n    ctx.fillStyle = 'white'\r\n    ctx.strokeStyle = 'white'\r\n    // toolState.setTool(new Eraser(canvasState.canvas))\r\n  }\r\n\r\n  const changeWidth = (e: React.ChangeEvent<HTMLInputElement>):void => {\r\n    toolState.setLineWidth(e.target.value)\r\n  }\r\n\r\n  const onSave = ():void => {\r\n    sessionStorage.setItem('coords',JSON.stringify(toolState.getCoords()))\r\n  }\r\n  const onDelete = ():void => {\r\n    let canvas  = canvasState.canvas \r\n    let ctx :CanvasRenderingContext2D = canvas.getContext('2d')\r\n    ctx.clearRect(0,0, canvas.width, canvas.height)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = toolState.getColor();\r\n    ctx.strokeStyle = toolState.getColor();\r\n    sessionStorage.removeItem('coords');\r\n    toolState.deleteCoords();\r\n  }\r\n  const onReplay = () => {\r\n    let coords : any[] = JSON.parse(String(sessionStorage.getItem('coords')))\r\n    let canvas  = canvasState.canvas \r\n    let ctx :CanvasRenderingContext2D = canvas.getContext('2d')\r\n    if(coords){\r\n      ctx.clearRect(0,0, canvas.width, canvas.height)\r\n      ctx.beginPath();\r\n      \r\n      let timer = setInterval(() => {\r\n        if(!coords.length){\r\n          clearInterval(timer);\r\n          ctx.beginPath();\r\n          return;\r\n        }\r\n        // if((/^\"#/g).test(coords[0])){\r\n        //   toolState.setToolColor(coords[0])\r\n        //   sessionStorage.setItem('color',toolState.getColor());\r\n        //   ctx.fillStyle = String(sessionStorage.getItem('color'));\r\n        //   ctx.strokeStyle = String(sessionStorage.getItem('color'));\r\n        //   console.log(String(sessionStorage.getItem('color')))\r\n          \r\n        // }\r\n        let crd = coords.shift();\r\n\r\n        let a = {\r\n          clientX: crd['0'],\r\n          clientY: crd['1']\r\n        }\r\n\r\n        ctx.lineTo(a.clientX,a.clientY);\r\n        ctx.stroke();\r\n    \r\n        ctx.beginPath();\r\n        ctx.arc(a.clientX,a.clientY,ctx.lineWidth /2,0,Math.PI * 2);\r\n        ctx.fill();\r\n    \r\n        ctx.beginPath();\r\n        ctx.moveTo(a.clientX,a.clientY);\r\n      \r\n    \r\n      },10)\r\n    }\r\n    return false;\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"button-block\">\r\n      <button className=\"brush\" onClick={onSelectBrush}><FontAwesomeIcon icon={faPaintBrush}/></button>\r\n      <button className=\"eraser\"  onClick={chooseEraser}><FontAwesomeIcon icon={faEraser}/></button>\r\n      <input className=\"brush-width\" onChange={changeWidth} defaultValue={1} min={1} max={50} type=\"range\"/>\r\n      <input className=\"сolor\" onChange={e => changeColor(e)} type=\"color\"/>\r\n      <button className=\"replay\" onClick={onReplay} ><FontAwesomeIcon icon={faPlay}/></button>\r\n      <button className=\"save\" onClick={onSave} ><FontAwesomeIcon icon={faSave}/></button>\r\n      <button className=\"back\" onClick={() => canvasState.back()}><FontAwesomeIcon icon={faChevronLeft}/></button>\r\n      <button className=\"forward\" onClick={() => canvasState.forward()}><FontAwesomeIcon icon={faChevronRight}/></button>\r\n      <button className=\"delete\" onClick={onDelete}><FontAwesomeIcon icon={faTrash}/></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToolBar\r\n","import React from 'react';\nimport Canvas from './components/Canvas';\nimport ToolBar from './components/ToolBar';\n\nconst  App :React.FC = () => {\n  \n  return (\n    <div className=\"app\">\n      <ToolBar/>\n      <Canvas/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.scss';\nimport App from './App';\nimport { StoresProvider, stores } from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoresProvider value={stores}>\n      <App />\n    </StoresProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}